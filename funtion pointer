#include <stdio.h>
/*
	funtion pointer
	: 포인터를 이용하여 함수를 간접적으로 호출
	: 프로그래밍의 유연성 증대(if문을 사용을 줄일 수 있다.)
*/
int add(int x, int y)
{
	return x+y;
}
int sub(int x, int y)
{
	return x-y;
}
int mul(int x, int y)
{
	return x*y;
}
int div(int x, int y)
{
	return x/y;
}


main()
{

	int which;
	int a,b,c;
	int i;
	int (*f[4])(int,int);

	f[0] = add;
	f[1] = sub;
	f[2] = mul;
	f[3] = div;


	printf("사칙연산 계산기 (1:덧셈, 2:뺄셈, 3:곱셈, 4:나눗셈)");
	for( i = 0; i < 10; i++)
	{
		printf("어떤 연산을 하시겠습니까? (1,2,3,4)");
		scanf("%d", &which);
		printf("첫번째 데이터는?");
		scanf("%d", &a);
		printf("두 번째 데이터는?");
		scanf("%d", &b);

		c = (*f[which -1])(a,b); //funtion pointer을 사용함으로 if문을 사용하지 않아 신텍스를 상당히 줄일수 있음

		/* if문을 사용하시 않고 funtion pointer를 사용할거임
		if(which == 1)
		{
			c = add(a,b);
		}
		else if(which ==2)
		{
			c = sub(a,b);
		}
		else if(which ==3)
		{
			c = mul(a,b);
		}
		else if(which ==4)
		{
			c = div(a,b);
		}
		*/
		printf("연산결과는 %d 입니다.",c);

	}


	/*
	기본 사용 방법 :
	int a,b,c;
	int (*f)(int,int);

	a = 30;
	b = 20;
	f = add; //point f가 add 함수를 시작 주소를 가르킨다.
	c = (*f)(a,b);
	printf("c = %d\n",c);

	*/
}
