/* swap1.c */
/* 강의 주제 :
	swapping
*/

#include <stdio.h>
main()
{
	int a = 10;
	int b = 20;
	int tmp;

	printf("before swapping: a = %d b = %d\n", a, b);//함수안에서 전역변수를 사용하는 것은 엉터리이다. 보편적이지 못하게 된다. 
	tmp = a;
	a = b;
	b = tmp;
	/* //아래 방식으로 했을땐...
		a = b;
		b = a;
	*/
	//swap exchange 
	//x = x ^ y;
	//y = x ^ y;
	//x = x ^ y;//이과정을 하면 비트와이져 연사자라서 서로의 자리를 바꾼다. 
	// ^ 는 hat 익스클루시브 오아
	
	printf("after swapping: a = %d b = %d\n", a, b);
}

/* 결과는 다음과 같이 나온다.
before swapping: a = 10 b = 20
after swapping: a = 20 b = 10
*/

////////////////////////////////////////////////////////
///////////////포인터 사용///////////////////////////////
#include <stdio.h>

void swap(int *a,int *b)//()안에 있는 건 formal parameter
{
  int tmp;
  
  tmp = *a;// *를 적어주는 행위를 디레퍼런싱
  *a = *b;
  *b = tmp;
}

main()
{
  int a = 10; 
  int b = 20;
  
  printf("before swapping : a = %d , b = %d \n", a,b)
  swap(&a,&b); //integer point type //()안에 있는건  actual parameter
  printf("after swapping : a = %d , b = %d \n", a,b);
}
//ex) f(x,y,&z,&a,p) 라는 함수가 있다고 가정했을 때 actual parameter중  x,y,p는 call by value(원래의 값?)이고, &z,&a는 call by reference(주소값)이다.


/////////////////////////////////////
//20220428 C수업
#include <stdio.h>

    

void swap(int *p,int *q)//함수안에서 전역변수를 사용하는 것은 엉터리이다. 보편적이지 못하게 된다. 
{//()안에 있는 건 formal parameter
	int tmp;

	tmp = *p; // *를 적어주는 행위를 디레퍼런싱
	*p = *q;
	*q = tmp;
	
}

main()
{
	int x;
	int y;

	x = 10;
	y = 20;
	printf("x = %d, y = %d\n",x,y);

	//swap exchange 
	//x = x ^ y;
	//y = x ^ y;
	//x = x ^ y;//이과정을 하면 비트와이져 연사자라서 서로의 자리를 바꾼다. 
	// ^ 는 hat 익스클루시브 오아
	
	//tmp = x;
	//x = y;
	//y = tmp;//기본적으로 swap하는 법
	swap(&x,&y);//()안에 있는건  actual parameter

	printf("x = %d, y = %d\n",x,y);

}

