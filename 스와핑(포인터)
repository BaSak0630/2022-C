/* swap1.c */
/* 강의 주제 :
	swapping
*/

#include <stdio.h>
main()
{
	int a = 10;
	int b = 20;
	int tmp;

	printf("before swapping: a = %d b = %d\n", a, b);
	tmp = a;
	a = b;
	b = tmp;
	/* //아래 방식으로 했을땐...
		a = b;
		b = a;
	*/
	printf("after swapping: a = %d b = %d\n", a, b);
}

/* 결과는 다음과 같이 나온다.
before swapping: a = 10 b = 20
after swapping: a = 20 b = 10
*/

////////////////////////////////////////////////////////
///////////////포인터 사용///////////////////////////////
#include <stdio.h>

void swap(int *a,int *b)
{
  int tmp;
  
  tmp = *a;
  *a = *b;
  *b = tmp;
}

main()
{
  int a = 10; 
  int b = 20;
  
  printf("before swapping : a = %d , b = %d \n", a,b)
  swap(&a,&b); //integer point type 
  printf("after swapping : a = %d , b = %d \n", a,b);
}
//ex) f(x,y,&z,&a,p) 라는 함수가 있다고 가정했을 때 actual parameter중  x,y,p는 call by value(원래의 값?)이고, &z,&a는 call by reference(주소값)이다.

